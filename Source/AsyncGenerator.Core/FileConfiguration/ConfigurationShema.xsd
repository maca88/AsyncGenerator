<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns="https://github.com/maca88/AsyncGenerator" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="https://github.com/maca88/AsyncGenerator" elementFormDefault="qualified">

  <xs:simpleType name="MethodConversion">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Ignore"/>
      <xs:enumeration value="Unknown"/>
      <xs:enumeration value="Smart"/>
      <xs:enumeration value="ToAsync"/>
      <xs:enumeration value="Copy"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="TypeConversion">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Ignore"/>
      <xs:enumeration value="Unknown"/>
      <xs:enumeration value="Partial"/>
      <xs:enumeration value="NewType"/>
      <xs:enumeration value="Copy"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="MethodCancellationToken">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Optional"/>
      <xs:enumeration value="Required"/>
      <xs:enumeration value="ForwardNone"/>
      <xs:enumeration value="SealedForwardNone"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:complexType name="MemberFilter">
    <xs:attribute name="all" type="xs:boolean" />
    <xs:attribute name="name" type="xs:string" />
    <xs:attribute name="hasAttribute" type="xs:string" />
    <xs:attribute name="hasAttributeName" type="xs:string" />
    <xs:attribute name="hasDocumentationComment" type="xs:boolean" />
    <xs:attribute name="containingNamespace" type="xs:string" />
    <xs:attribute name="containingType" type="xs:string" />
    <xs:attribute name="containingTypeName" type="xs:string" />
    <xs:attribute name="containingAssemblyName" type="xs:string" />
    <xs:attribute name="rule" type="xs:string" />
    <xs:attribute name="isVirtual" type="xs:boolean" />
    <xs:attribute name="isAbstract" type="xs:boolean" />
  </xs:complexType>
  
  <xs:complexType name="DocumentFilter">
    <xs:attribute name="all" type="xs:boolean" />
    <xs:attribute name="filePath" type="xs:string" />
    <xs:attribute name="filePathEndsWith" type="xs:string" />
    <xs:attribute name="name" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="MethodFilter">
    <xs:complexContent>
      <xs:extension base="MemberFilter">
        <xs:attribute name="returnsVoid" type="xs:boolean" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="TypeFilter">
    <xs:complexContent>
      <xs:extension base="MemberFilter">
        <xs:attribute name="anyInterfaceRule" type="xs:string" />
        <xs:attribute name="anyBaseTypeRule" type="xs:string" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="MethodPredicateFilter">
    <xs:complexContent>
      <xs:extension base="MethodFilter">
        <xs:attribute name="result" type="xs:boolean" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
    
  <xs:complexType name="TypePredicateFilter">
    <xs:complexContent>
      <xs:extension base="TypeFilter">
        <xs:attribute name="result" type="xs:boolean" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="DocumentPredicateFilter">
    <xs:complexContent>
      <xs:extension base="DocumentFilter">
        <xs:attribute name="result" type="xs:boolean" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="MethodConversionFilter">
    <xs:complexContent>
      <xs:extension base="MethodFilter">
        <xs:attribute name="conversion" type="MethodConversion" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="MethodCancellationTokenFilter">
    <xs:complexContent>
      <xs:extension base="MethodFilter">
        <xs:attribute name="anyInterfaceRule" type="xs:string" />
        <xs:attribute name="parameter" type="MethodCancellationToken" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="TypeConversionFilter">
    <xs:complexContent>
      <xs:extension base="TypeFilter">
        <xs:attribute name="conversion" type="TypeConversion" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  
  <xs:complexType name="Rule">
    <xs:attribute name="name" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="MethodRule">
    <xs:complexContent>
      <xs:extension base="Rule">
        <xs:sequence>
          <xs:element name="Filters">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="Filter" type="MethodFilter" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="TypeRule">
    <xs:complexContent>
      <xs:extension base="Rule">
        <xs:sequence>
          <xs:element name="Filters">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="Filter" type="TypeFilter" maxOccurs="unbounded"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="MethodContentFilter">
    <xs:complexContent>
      <xs:extension base="MethodFilter">
        <xs:all>
          <xs:element type="xs:string" name="Content"/>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="TypeContentFilter">
    <xs:complexContent>
      <xs:extension base="TypeFilter">
        <xs:all>
          <xs:element type="xs:string" name="Content"/>
        </xs:all>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
    
  <xs:complexType name="Parameter">
    <xs:attribute name="name" type="xs:string" />
    <xs:attribute name="value" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="ProjectFile">
    <xs:attribute name="projectName" type="xs:string" use="required"/>
    <xs:attribute name="fileName" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="AsyncExtensionMethods">
    <xs:sequence>
      <xs:element name="ProjectFiles" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="ProjectFile" type="ProjectFile" maxOccurs="unbounded" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="CancellationTokens">
    <xs:all>
      <xs:element name="Guards" type="xs:boolean" nillable="true" minOccurs="0" />
      <xs:element name="MethodParameter" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Method" type="MethodCancellationTokenFilter" maxOccurs="unbounded" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="WithoutCancellationToken" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Method" type="MethodFilter" maxOccurs="unbounded" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RequiresCancellationToken" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Method" type="MethodFilter" maxOccurs="unbounded" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:all>
    <xs:attribute name="enabled" type="xs:boolean" />
  </xs:complexType>
    
  <xs:complexType name="Diagnostics">
    <xs:all>
      <xs:element name="Disable" type="xs:boolean" nillable="true" minOccurs="0" />
      <xs:element name="DiagnoseDocument" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Document" type="DocumentPredicateFilter" maxOccurs="unbounded" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DiagnoseType" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Type" type="TypePredicateFilter" maxOccurs="unbounded" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DiagnoseMethod" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Method" type="MethodPredicateFilter" maxOccurs="unbounded" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
    
  <xs:complexType name="ExceptionHandling">
    <xs:all>
      <xs:element name="CatchPropertyGetterCalls" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Method" type="MethodPredicateFilter" maxOccurs="unbounded" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CatchMethodBody" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Method" type="MethodPredicateFilter" maxOccurs="unbounded" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="Analyzation">
    <xs:all>
      <xs:element name="MethodConversion" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Method" type="MethodConversionFilter" maxOccurs="unbounded" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="PropertyConversion" type="xs:boolean" nillable="true" minOccurs="0"/>
      <xs:element name="AsyncExtensionMethods" type="AsyncExtensionMethods" minOccurs="0"/>
      <xs:element name="Diagnostics" type="Diagnostics" minOccurs="0" />
      <xs:element name="ExceptionHandling" type="ExceptionHandling" minOccurs="0" />
      <xs:element name="PreserveReturnType" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Method" type="MethodFilter" maxOccurs="unbounded" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AlwaysAwait" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Method" type="MethodFilter" maxOccurs="unbounded" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="TypeConversion" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Type" type="TypeConversionFilter" maxOccurs="unbounded" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="IgnoreDocuments" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Document" type="DocumentFilter" maxOccurs="unbounded" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="IgnoreSearchForAsyncCounterparts" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Method" type="MethodFilter" maxOccurs="unbounded" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="IgnoreAsyncCounterparts" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Method" type="MethodFilter" maxOccurs="unbounded" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="IgnoreSearchForMethodReferences" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Method" type="MethodFilter" maxOccurs="unbounded" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CallForwarding" type="xs:boolean" nillable="true" minOccurs="0"/>
      <xs:element name="CancellationTokens" type="CancellationTokens" minOccurs="0" />
      <xs:element name="ScanMethodBody" type="xs:boolean" nillable="true" minOccurs="0"/>
      <xs:element name="SearchAsyncCounterpartsInInheritedTypes" type="xs:boolean" nillable="true" minOccurs="0"/>
      <xs:element name="ScanForMissingAsyncMembers" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Type" type="TypeFilter" maxOccurs="unbounded" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:complexType name="DocumentationComments">
    <xs:all>
      <xs:element name="AddOrReplacePartialTypeComments" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Type" type="TypeContentFilter" maxOccurs="unbounded" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RemovePartialTypeComments" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Type" type="TypeFilter" maxOccurs="unbounded" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>

      <xs:element name="AddOrReplaceNewTypeComments" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Type" type="TypeContentFilter" maxOccurs="unbounded" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RemoveNewTypeComments" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Type" type="TypeFilter" maxOccurs="unbounded" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>

      <xs:element name="AddOrReplaceMethodSummary" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Method" type="MethodContentFilter" maxOccurs="unbounded" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RemoveMethodSummary" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Method" type="MethodFilter" maxOccurs="unbounded" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>

      <xs:element name="AddOrReplaceMethodRemarks" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Method" type="MethodContentFilter" maxOccurs="unbounded" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="RemoveMethodRemarks" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Method" type="MethodFilter" maxOccurs="unbounded" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>


  <xs:complexType name="Transformation">
    <xs:all>
      <xs:element name="Disable" type="xs:boolean" nillable="true" minOccurs="0" />
      <xs:element name="AsyncFolder" type="xs:string" minOccurs="0" />
      <xs:element name="ConfigureAwaitArgument" type="xs:boolean"  nillable="true" minOccurs="0" />
      <xs:element name="LocalFunctions" type="xs:boolean" nillable="true" minOccurs="0" />
      <xs:element name="DocumentationComments" type="DocumentationComments" minOccurs="0" />
      <xs:element name="AsyncLock" minOccurs="0">
        <xs:complexType>
          <xs:attribute name="type" type="xs:string" use="required" />
          <xs:attribute name="methodName" type="xs:string" use="required" />
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  
  <xs:complexType name="Project">
      <xs:all>
        <xs:element name="ConcurrentRun" type="xs:boolean" nillable="true" minOccurs="0"/>
        <xs:element name="TargetFramework" type="xs:string" nillable="true" minOccurs="0"/>
        <xs:element name="ApplyChanges" type="xs:boolean" nillable="true" minOccurs="0" />
        <xs:element name="Analyzation" type="Analyzation" minOccurs="0"/>
        <xs:element name="Transformation" type="Transformation" minOccurs="0"/>
        <xs:element name="RegisterPlugin" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Plugin" maxOccurs="unbounded" minOccurs="0">
                <xs:complexType>
                  <xs:all>
                    <xs:element name="Parameters" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                           <xs:element name="Parameter" type="Parameter" maxOccurs="unbounded" minOccurs="0"/>
                         </xs:sequence>
                       </xs:complexType>
                     </xs:element>
                  </xs:all>
                  <xs:attribute name="type" type="xs:string" use="required" />
                  <xs:attribute name="assemblyName" type="xs:string" />
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:all>
    <xs:attribute name="name" type="xs:string" /> <!--Required only if inside Solution-->
    <xs:attribute name="filePath" type="xs:string" /> <!--Required only if inside Projects-->
  </xs:complexType>

  <xs:complexType name="Solution">
    <xs:all>
      <xs:element name="ConcurrentRun" type="xs:boolean" nillable="true" minOccurs="0"/>
      <xs:element name="TargetFramework" type="xs:string" nillable="true" minOccurs="0"/>
      <xs:element name="ApplyChanges" type="xs:boolean" nillable="true" minOccurs="0" />
      <xs:element name="SuppressDiagnosticFailures" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Suppress" maxOccurs="unbounded" minOccurs="0">
              <xs:complexType>
                <xs:attribute name="pattern" type="xs:string" use="required" />
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Projects">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Project" type="Project" maxOccurs="unbounded" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:all>
    <xs:attribute name="filePath" type="xs:string" use="required" />
  </xs:complexType>

  <xs:element name="AsyncGenerator">
    <xs:complexType>
      <xs:all>
        <xs:element name="Solution" type="Solution" minOccurs="0"/>
        <xs:element name="Projects" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Project" type="Project" maxOccurs="unbounded" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="MethodRules" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MethodRule" type="MethodRule" maxOccurs="unbounded" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TypeRules" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TypeRule" type="TypeRule" maxOccurs="unbounded" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CSharpScript" type="xs:string" nillable="true" minOccurs="0" />
      </xs:all>
    </xs:complexType>
  </xs:element>

</xs:schema>
